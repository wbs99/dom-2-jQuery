window.jQuery = function(selectorOrArray) {
    //接受一个选择器，根据这个选择器得到一些 elements，
    let elements;
    if (typeof selectorOrArray === 'string') elements = document.querySelectorAll(selectorOrArray);
    else if (selectorOrArray instanceof Array) elements = selectorOrArray;
    //return 一个可以操作 elements 的对象
    return {
        //闭包：函数访问外部的变量
        addClass (className) {
            for(let i = 0; i < elements.length; i++)elements[i].classList.add(className);
            return this;
        },
        find (selector) {
            let array = [];
            for(let i = 0; i < elements.length; i++){
                const elements2 = Array.from(elements[i].querySelectorAll(selector));
                array = array.concat(elements2);
            }
            array.oldApi = this; // this 是旧 api
            return jQuery(array);
        },
        oldApi: selectorOrArray.oldApi,
        end () {
            return this.oldApi; //this 是新 api
        },
        each (fn) {
            for(let i = 0; i < elements.length; i++)fn.call(null, elements[i], i);
            return this;
        },
        parent () {
            const array = [];
            this.each((node)=>{
                array.push(node.parent);
            });
            return jQuery(array);
        },
        prints
    };
};
